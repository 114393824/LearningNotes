// { "framework": "Vue" }

/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 7);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__base__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__height__ = __webpack_require__(5);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__request__ = __webpack_require__(6);
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "base", function() { return __WEBPACK_IMPORTED_MODULE_0__base__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "height", function() { return __WEBPACK_IMPORTED_MODULE_1__height__["a"]; });
/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, "request", function() { return __WEBPACK_IMPORTED_MODULE_2__request__["a"]; });






/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var __vue_exports__, __vue_options__
var __vue_styles__ = []

/* styles */
__vue_styles__.push(__webpack_require__(15)
)

/* script */
__vue_exports__ = __webpack_require__(12)

/* template */
var __vue_template__ = __webpack_require__(18)
__vue_options__ = __vue_exports__ = __vue_exports__ || {}
if (
  typeof __vue_exports__.default === "object" ||
  typeof __vue_exports__.default === "function"
) {
if (Object.keys(__vue_exports__).some(function (key) { return key !== "default" && key !== "__esModule" })) {console.error("named exports are not supported in *.vue files.")}
__vue_options__ = __vue_exports__ = __vue_exports__.default
}
if (typeof __vue_options__ === "function") {
  __vue_options__ = __vue_options__.options
}
__vue_options__.__file = "/Users/qingfeng/shop-weex-m/src/pages/search-weex/search-weex.vue"
__vue_options__.render = __vue_template__.render
__vue_options__.staticRenderFns = __vue_template__.staticRenderFns
__vue_options__._scopeId = "data-v-ab58823c"
__vue_options__.style = __vue_options__.style || {}
__vue_styles__.forEach(function (module) {
  for (var name in module) {
    __vue_options__.style[name] = module[name]
  }
})
if (typeof __register_static_styles__ === "function") {
  __register_static_styles__(__vue_options__._scopeId, __vue_styles__)
}

module.exports = __vue_exports__


/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tag_vue__ = __webpack_require__(8);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__tag_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__tag_vue__);


/* harmony default export */ __webpack_exports__["a"] = (__WEBPACK_IMPORTED_MODULE_0__tag_vue___default.a);

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(9);

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    parseParams: function parseUrl(qs, sep, eq, options) {
      function hasOwnProperty(obj, prop) {
        return Object.prototype.hasOwnProperty.call(obj, prop);
      }

      sep = sep || '&';
      eq = eq || '=';
      var obj = {};

      if (typeof qs !== 'string' || qs.length === 0) {
        return obj;
      }

      var regexp = /\+/g;
      qs = qs.split(sep);

      var maxKeys = 1000;
      if (options && typeof options.maxKeys === 'number') {
        maxKeys = options.maxKeys;
      }

      var len = qs.length;
      // maxKeys <= 0 means that we should not limit keys count
      if (maxKeys > 0 && len > maxKeys) {
        len = maxKeys;
      }

      for (var i = 0; i < len; ++i) {
        var x = qs[i].replace(regexp, '%20'),
            idx = x.indexOf(eq),
            kstr,
            vstr,
            k,
            v;

        if (idx >= 0) {
          kstr = x.substr(0, idx);
          vstr = x.substr(idx + 1);
        } else {
          kstr = x;
          vstr = '';
        }

        k = decodeURIComponent(kstr);
        v = decodeURIComponent(vstr);

        if (!hasOwnProperty(obj, k)) {
          obj[k] = v;
        } else if (Array.isArray(obj[k])) {
          obj[k].push(v);
        } else {
          obj[k] = [obj[k], v];
        }
      }

      return obj;
    },
    stringifyParams: function stringifyParams(obj, sep, eq, name) {
      var stringifyPrimitive = function stringifyPrimitive(v) {
        switch (typeof v === 'undefined' ? 'undefined' : _typeof(v)) {
          case 'string':
            return v;

          case 'boolean':
            return v ? 'true' : 'false';

          case 'number':
            return isFinite(v) ? v : '';

          default:
            return '';
        }
      };

      sep = sep || '&';
      eq = eq || '=';
      if (obj === null) {
        obj = undefined;
      }

      if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {
        return Object.keys(obj).map(function (k) {
          var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
          if (Array.isArray(obj[k])) {
            return obj[k].map(function (v) {
              return ks + encodeURIComponent(stringifyPrimitive(v));
            }).join(sep);
          } else {
            return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
          }
        }).join(sep);
      }

      if (!name) return '';
      return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
    }
  }
});

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {

    /**
    * 
    * @description 设置list或者scroller的全屏高度
    * @param {Number} [height] - 需要减掉的高度 「default: 0」
    * @param {Boolean} [isAbsHeight] - 是否使用绝对高度
    *                                    任意屏都显示相同的高度 「default: false」
    * @param {Boolean} [hasTitleBar] - H5端是否使用titleBar
    * @return {Boolean}
    */
    getListHeight: function getListHeight(height, isAbsHeight, hasTitleBar) {

      var deviceHeight = parseInt(weex.config.env.deviceHeight);
      var rate = weex.config.env.deviceWidth / 750;
      var deviceScale = weex.config.env.scale;

      if (weex.config.env.platform.toLowerCase() === 'web') {

        if (height && typeof height === 'number') {

          if (isAbsHeight && typeof isAbsHeight === 'boolean') {
            return hasTitleBar ? deviceHeight / rate - (height + 88) / 2 / deviceScale : deviceHeight / rate - height / 2 / deviceScale;
          } else {
            return hasTitleBar ? deviceHeight / rate - height - 88 / 2 / deviceScale : deviceHeight / rate - height;
          }
        } else {
          return hasTitleBar ? deviceHeight / rate - 88 / 2 / deviceScale : deviceHeight / rate;
        }
      } else {

        if (height && typeof height === 'number') {

          if (isAbsHeight && typeof isAbsHeight === 'boolean') {
            return (deviceHeight - (64 + height / 2) * deviceScale) / rate;
          } else {
            return (deviceHeight - 64 * deviceScale) / rate - height;
          }
        } else {

          return (deviceHeight - 64 * deviceScale) / rate;
        }
      }
    },

    /**
    * 
    * @description 获取一个高度的绝对高度
    * @param {Number} [height] 设计稿量的高度
    * @return {Boolean}
    */
    getAbsHeight: function getAbsHeight(height) {
      var rate = weex.config.env.deviceWidth / 750;
      var deviceScale = weex.config.env.scale;

      if (weex.config.env.platform.toLowerCase() === 'web') {
        return height / 2 / deviceScale;
      } else {
        return height / 2 * deviceScale / rate;
      }
    }
  }
});

/***/ }),
/* 6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__weex_mixins__ = __webpack_require__(0);


var stream = weex.requireModule('stream');
var shopModal = weex.requireModule('shopModal');
var shopBase = weex.requireModule('shopBase');

/* harmony default export */ __webpack_exports__["a"] = ({
  methods: {
    /**
     * config:
     * {
     *  method, string ['GET', POST]
     *  url. string
     *  type, string ['json']
     *  headers, object
     *  data, onject
     *  showLoading, boolean default:true
     * }
     */
    fetch: function fetch(config, callback) {
      // const self = this;
      var showLoading = typeof config.showLoading === 'boolean' ? config.showLoading : true;
      showLoading && shopBase.showLoading();
      var method = config.method || 'GET';
      var isGet = method.toLowerCase() === 'get';
      var queryString = __WEBPACK_IMPORTED_MODULE_0__weex_mixins__["base"].methods.stringifyParams(config.data);
      var type = config.type || 'json';
      var headers = config.headers || {};
      if (!isGet) {
        headers['Content-Type'] = 'application/x-www-form-urlencoded';
      }
      var url = isGet ? config.url + '?' + queryString : config.url;
      var body = !isGet ? queryString : '';
      return stream.fetch({
        method: method,
        url: url,
        type: type,
        headers: headers,
        body: body
      }, function (response) {
        showLoading && shopBase.hideLoading();
        if (response.ok) {
          try {
            response.data = typeof response.data === 'string' ? JSON.parse(response.data) : response.data;
          } catch (error) {
            console.log('1');
          }

          callback(response.data);
        } else {
          shopModal.toast({ message: '被挤爆啦! 请稍后再试~', duration: 2 });
        }
      }, function () {});
    }
  }
});

/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__search_weex_vue__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__search_weex_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__search_weex_vue__);


__WEBPACK_IMPORTED_MODULE_0__search_weex_vue___default.a.el = '#weex';
/* harmony default export */ __webpack_exports__["default"] = (new Vue(__WEBPACK_IMPORTED_MODULE_0__search_weex_vue___default.a));

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

var __vue_exports__, __vue_options__
var __vue_styles__ = []

/* styles */
__vue_styles__.push(__webpack_require__(14)
)

/* script */
__vue_exports__ = __webpack_require__(10)

/* template */
var __vue_template__ = __webpack_require__(17)
__vue_options__ = __vue_exports__ = __vue_exports__ || {}
if (
  typeof __vue_exports__.default === "object" ||
  typeof __vue_exports__.default === "function"
) {
if (Object.keys(__vue_exports__).some(function (key) { return key !== "default" && key !== "__esModule" })) {console.error("named exports are not supported in *.vue files.")}
__vue_options__ = __vue_exports__ = __vue_exports__.default
}
if (typeof __vue_options__ === "function") {
  __vue_options__ = __vue_options__.options
}
__vue_options__.__file = "/Users/qingfeng/shop-weex-m/src/components/page-tag/tag.vue"
__vue_options__.render = __vue_template__.render
__vue_options__.staticRenderFns = __vue_template__.staticRenderFns
__vue_options__._scopeId = "data-v-79c3b670"
__vue_options__.style = __vue_options__.style || {}
__vue_styles__.forEach(function (module) {
  for (var name in module) {
    __vue_options__.style[name] = module[name]
  }
})
if (typeof __register_static_styles__ === "function") {
  __register_static_styles__(__vue_options__._scopeId, __vue_styles__)
}

module.exports = __vue_exports__


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var __vue_exports__, __vue_options__
var __vue_styles__ = []

/* styles */
__vue_styles__.push(__webpack_require__(13)
)

/* script */
__vue_exports__ = __webpack_require__(11)

/* template */
var __vue_template__ = __webpack_require__(16)
__vue_options__ = __vue_exports__ = __vue_exports__ || {}
if (
  typeof __vue_exports__.default === "object" ||
  typeof __vue_exports__.default === "function"
) {
if (Object.keys(__vue_exports__).some(function (key) { return key !== "default" && key !== "__esModule" })) {console.error("named exports are not supported in *.vue files.")}
__vue_options__ = __vue_exports__ = __vue_exports__.default
}
if (typeof __vue_options__ === "function") {
  __vue_options__ = __vue_options__.options
}
__vue_options__.__file = "/Users/qingfeng/shop-weex-m/src/components/weex-header/index.vue"
__vue_options__.render = __vue_template__.render
__vue_options__.staticRenderFns = __vue_template__.staticRenderFns
__vue_options__._scopeId = "data-v-745da93a"
__vue_options__.style = __vue_options__.style || {}
__vue_styles__.forEach(function (module) {
  for (var name in module) {
    __vue_options__.style[name] = module[name]
  }
})
if (typeof __register_static_styles__ === "function") {
  __register_static_styles__(__vue_options__._scopeId, __vue_styles__)
}

module.exports = __vue_exports__


/***/ }),
/* 10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
//
//
//
//
//
//
//
//

/**
 * tag1: 红边红字 默认
 * tag2: 红底白字
 * tag3: 白底灰字
 *
 **/
/* harmony default export */ __webpack_exports__["default"] = ({
  name: 'yoga-tag',
  data: function data() {
    return {};
  },

  props: {
    type: {
      default: 'tag1',
      type: String
    },
    size: {
      default: 20,
      type: [String, Number]
    },
    disable: {
      default: false,
      type: Boolean
    }
  },
  computed: {
    oClassNameContainer: function oClassNameContainer() {
      var self = this;
      var oClassName = {};
      switch (self.type) {
        case 'tag1':
          if (+self.size === 20) {
            oClassName.containerClass = 'tag1-container-20';
            oClassName.titleClass = 'tag1-title-20';
          } else if (+self.size === 24) {
            oClassName.containerClass = 'tag1-container-24';
            oClassName.titleClass = 'tag1-title-24';
          }
          break;
        case 'tag2':
          if (+self.size === 20) {
            oClassName.containerClass = self.disable ? 'tag2-container-20-disable' : 'tag2-container-20';
            oClassName.titleClass = 'tag2-title-20';
          } else if (+self.size === 24) {
            oClassName.containerClass = self.disable ? 'tag2-container-24-disable' : 'tag2-container-24';
            oClassName.titleClass = 'tag2-title-24';
          }
          break;
        case 'tag3':
          if (+self.size === 20) {
            oClassName.containerClass = 'tag3-container-20';
            oClassName.titleClass = 'tag3-title-20';
          } else if (+self.size === 24) {
            oClassName.containerClass = 'tag3-container-24';
            oClassName.titleClass = 'tag3-title-24';
          }
          break;
        default:
          break;
      }
      return oClassName;
    }
  }
});

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


var navigator = weex.requireModule('navigator');
var mixinsHeight = __webpack_require__(0).height;

module.exports = {
  name: 'spon-header',
  data: function data() {
    return {
      navigationBarHeight: 0,
      navigationBarItemHeight: 0,
      navigationLeftImage: '//cdn1.showjoy.com/images/0d/0d14922201ef4b1cadf620a088bcf81f.png.48x48.png'
    };
  },

  props: {
    fixed: {
      default: false,
      type: Boolean
    },
    title: {
      default: '',
      type: String
    },
    titleColor: {
      default: '#fff',
      type: String
    },
    barBGColor: {
      default: '#f93450',
      type: String
    },
    border: {
      default: false,
      type: Boolean
    }
  },
  created: function created() {
    var self = this;
    // 设置list的高度
    self.setTitleBarHeight();
  },

  methods: {
    // 适配导航栏
    setTitleBarHeight: function setTitleBarHeight() {
      var self = this;
      var rate = weex.config.env.deviceWidth / 750;
      var deviceScale = weex.config.env.scale;
      self.navigationBarHeight = weex.config.env.platform === 'iOS' ? self.getAbsHeight(128) : self.getAbsHeight(88);
      self.navigationBarItemHeight = self.getAbsHeight(88);
    },
    navigationPopAction: function navigationPopAction() {
      navigator.pop({
        animated: 'true'
      }, function () {});
    }
  },
  mixins: [mixinsHeight]
};

/***/ }),
/* 12 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_components_weex_mixins_weex_mixins__ = __webpack_require__(0);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_components_page_tag__ = __webpack_require__(2);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

// 公共mixins

// 业务组件

// 基础组件
var Header = __webpack_require__(3);
// modules
var shopBase = weex.requireModule('shopBase');
var shopModal = weex.requireModule('shopModal');
var navigator = weex.requireModule('navigator');
var storage = weex.requireModule('storage');
// module.exports
/* harmony default export */ __webpack_exports__["default"] = ({
  components: {
    'spon-header': Header,
    'yoga-tag': __WEBPACK_IMPORTED_MODULE_1_components_page_tag__["a" /* default */]
  },
  data: function data() {
    return {
      // public
      isWeb: weex.config.env.platform.toLowerCase() === 'web',
      // public-接口
      keywordValue: '',
      qValue: '',
      cateNameValue: '',
      brandZhNameValue: '',
      sortValue: '',
      shopId: 0,
      // NAV
      navInputContent: '',
      navInputWidth: 491,
      navInputMarginLeft: 0,
      navBackImage: '//cdn1.showjoy.com/images/51/5137f3e104584f32ab52283bce90fd61.png',
      navSearchImage: '//cdn1.showjoy.com/images/85/85eb309cb5dc412d8d3afd6d1d3a30cf.png',
      navCloseImage: '//cdn1.showjoy.com/images/7a/7a35eae1e2fa46d48a4a936588835cfe.png',
      navShareImage: '//cdn1.showjoy.com/images/2a/2a75c860e4d345b29258fc4cd8e81b4c.png',
      navFocus: false,
      FixedLayoutTop: 0,
      // TAB
      tabHeight: 0,
      tabArray: [{ id: 0, name: '综合', color: 'press', up: 'none', down: 'none', clickFirst: false }, { id: 1, name: '销量', color: 'normal', up: 'normal', down: 'normal', clickFirst: false }, { id: 2, name: '价格', color: 'normal', up: 'normal', down: 'normal', clickFirst: false }, { id: 3, name: '收益', color: 'normal', up: 'normal', down: 'normal', clickFirst: false }, { id: 4, name: '品牌', color: 'normal', up: 'none', down: 'normal', clickFirst: false }],
      tabItemLastClickPos: 0,
      // 搜索结果列表
      resultListHeight: 0,
      resultList: [],
      resultPageIndex: 1,
      resultRefreshStatus: 'hide',
      resultLoadingStatus: 'hide',
      resultNull: '//cdn1.showjoy.com/images/80/809c07b084664d6baa8cc56ecc2eb7e8.png',
      resultItemSoldOut: '//cdn1.showjoy.com/images/a4/a4b2b71896a04e9bbe70e413de71faff.png',
      resultItemRightBottomShareImage: '//cdn1.showjoy.com/images/c7/c724c418c2b94cabbdb6af814fc6653f.png',
      resultRequestFirst: false,
      // 搜索建议列表
      sugList: [],
      sugListHeight: 0,
      // 品牌结果列表
      brandList: [],
      brandListShow: false,
      brandListOutHeight: 0, // 品牌结果列表半透明部分高度
      brandItemSelectIcon: '//cdn1.showjoy.com/images/4c/4c4d35963f48438b8c18ff5579288615.png',
      brandLastSelectedPos: 0, // 最后一次选中的品牌
      // 搜索历史列表
      historyList: [],
      historyListHeight: 0,
      historyDelIcon: '//cdn1.showjoy.com/images/b9/b99129fd9fba45a4943b21f2a6851ca1.png'
    };
  },

  filters: {
    // 用于处理字符串
    addSpace: function addSpace(value, isSpecial) {
      if (!value) return '';
      var newValue = '';
      if (isSpecial) {
        newValue = '                  ' + value;
      } else {
        newValue = value;
      }
      return newValue;
    },
    splitBrandName: function splitBrandName(value, isFirst) {
      if (!value) return '';
      var newValue = '';
      if (isFirst) {
        newValue = value.split('|')[0];
      } else if (value.split('|').length === 1) {
        newValue = '';
      } else {
        newValue = '/' + value.split('|')[1];
      }
      return newValue;
    }
  },
  created: function created() {
    var self = this;
    shopBase.userTrack({ key: 'page_search', params: {} });
    shopBase.showTitleBar(false);
    if (weex.config.env.platform.toLowerCase() === 'ios') {
      self.FixedLayoutTop = self.getAbsHeight(128);
    } else {
      self.FixedLayoutTop = self.getAbsHeight(88);
    }
    self.tabHeight = 81;
    self.resultListHeight = self.getListHeight(self.tabHeight, false, true);
    self.sugListHeight = self.getListHeight(0, false, true);
    self.brandListOutHeight = self.getListHeight(self.tabHeight + 700, false, true);
    self.historyListHeight = self.getListHeight(0, false, true);
    // 搜索结果列表
    self.navFocus = true;
    if (weex.config.q) {
      self.navFocus = false;
      if (weex.config.q.indexOf('cateName') !== -1 && weex.config.q.indexOf('brandZhName') === -1) {
        self.cateNameValue = weex.config.q.split(':')[1];
      }
      if (weex.config.q.indexOf('cateName') === -1 && weex.config.q.indexOf('brandZhName') !== -1) {
        self.brandZhNameValue = weex.config.q.split(':')[1];
      }
      if (weex.config.q.indexOf('cateName') !== -1 && weex.config.q.indexOf('brandZhName') !== -1) {
        if (weex.config.q.split('=')[1].split(',')[0].indexOf('cateName') === -1) {
          self.brandZhNameValue = weex.config.q.split('=')[1].split(',')[1].split(':')[1];
        } else {
          self.cateNameValue = weex.config.q.split('=')[1].split(',')[0].split(':')[1];
        }
      }
      self.qValue = decodeURIComponent(weex.config.q);
    }
    if (weex.config.keyword) {
      self.keywordValue = decodeURIComponent(weex.config.keyword);
    }
    self.resultPageIndex = 1;
    self.shopId = weex.config.shopId;
    if (weex.config.keyword || weex.config.q) {
      self.search();
    }
    // 搜索历史列表
    storage.getItem('history', function (event) {
      if (event.data !== 'undefined') {
        self.historyList = event.data.split(',');
      }
    });
    // 品牌是否置灰
    if (self.keywordValue === '' && self.cateNameValue === '' && self.brandZhNameValue !== '') {
      self.tabArray[4].color = 'disable';
      self.tabArray[4].down = 'disable';
    }
  },

  methods: {
    // public function
    search: function search() {
      var self = this;
      // 保存搜索历史
      storage.getItem('history', function (event) {
        if (self.navInputContent.trim() !== '') {
          var storageContent = void 0;
          if (event.data !== 'undefined' && event.data !== '') {
            // 检查是否重复，重复的词语不保存
            if (event.data.indexOf(self.navInputContent.trim()) === -1) {
              storageContent = event.data + ',' + self.navInputContent.trim();
            } else {
              storageContent = '' + event.data;
            }
          } else {
            storageContent = self.navInputContent.trim();
          }
          storage.setItem('history', storageContent, function () {
            storage.getItem('history', function (innerGetEvent) {
              if (innerGetEvent.data !== 'undefined') {
                self.historyList = innerGetEvent.data.split(',');
              }
            });
          });
        }
      });
      // 开始请求
      var data = {
        page: self.resultPageIndex,
        shopId: self.shopId,
        keyword: self.keywordValue,
        q: self.qValue,
        sort: self.sortValue
      };
      self.fetch({
        method: 'GET',
        url: 'http://shop-dev.m.showjoy.net/api/search',
        data: data
      }, function (response) {
        self.resultRequestFirst = true;
        self.resultRefreshStatus = 'hide';
        self.resultLoadingStatus = 'hide';
        if (response.isSuccess) {
          if (response.data) {
            if (response.data.shopId) {
              self.shopId = response.data.shopId;
            }
            if (response.data.searchPageVO && response.data.searchPageVO.items) {
              if (self.resultPageIndex === 1) {
                self.resultList = response.data.searchPageVO.items;
              } else {
                self.resultList = self.resultList.concat(response.data.searchPageVO.items);
              }
            } else if (self.resultPageIndex === 1) {
              self.resultList = [];
            } else {
              shopModal.toast({ message: '最后一页啦' });
            }
            if (response.data.brandNames) {
              self.brandList = response.data.brandNames;
            }
            self.brandList.unshift('全部|All');
          }
        } else {
          shopModal.toast({ message: response.msg });
        }
      });
    },

    // 导航栏-public
    onFocus: function onFocus() {
      var self = this;
      self.navFocus = true;
      self.navInputWidth = 524;
      self.navInputMarginLeft = 20;
    },
    onBlur: function onBlur() {
      var self = this;
      self.navFocus = false;
      self.navInputWidth = 491;
      self.navInputMarginLeft = 0;
      // self.$refs['input'].blur();
    },
    onInput: function onInput() {
      var self = this;
      if (self.navInputContent.trim() !== '') {
        var data = {
          word: self.navInputContent.trim()
        };
        self.fetch({
          method: 'GET',
          url: '/api/sug',
          data: data
        }, function (response) {
          if (response.isSuccess) {
            if (response.data) {
              self.sugList = response.data;
            }
          } else {
            shopModal.toast({ message: response.msg });
          }
        });
      }
    },

    // 导航栏-web
    navClose: function navClose() {
      var self = this;
      self.navInputContent = '';
      self.navFocus = false;
    },
    navSearch: function navSearch() {
      var self = this;
      self.keywordValue = self.navInputContent.trim();
      self.resultPageIndex = 1;
      self.qValue = '';
      self.sortValue = '';
      self.search();
      self.navFocus = false;
    },

    // 导航栏-native
    onReturn: function onReturn(event) {
      // native键盘搜索事件
      if (event.returnKeyType === 'search') {
        var self = this;
        self.keywordValue = self.navInputContent.trim();
        self.resultPageIndex = 1;
        self.qValue = '';
        self.sortValue = '';
        self.search();
        self.onBlur();
      }
    },

    // 导航栏-native-获得焦点
    navCancel: function navCancel() {
      var self = this;
      self.onBlur();
      self.navInputWidth = 491;
      self.navInputMarginLeft = 0;
      if (self.resultList && self.resultList.length < 1) {
        self.navBack();
      }
    },

    // 导航栏-native-失去焦点
    navBack: function navBack() {
      navigator.pop({
        animated: 'true'
      }, function () {});
    },
    navShare: function navShare() {
      var self = this;
      var data = {
        title: '我在达人店搜到好东西啦，一起来买买买吧~',
        desc: '好东西要分享~',
        link: 'http://shop.m.showjoy.com/search?&page=' + self.resultPageIndex + '&shopId=' + self.shopId + '&keyword=' + self.keywordValue + '&q=' + self.qValue + '&sort=' + self.sortValue,
        imgUrl: 'http://cdn1.showjoy.com/images/fe/fec026f0c0d045ed8daaf845a7e8bbc9.png'
      };
      shopBase.share(JSON.stringify(data));
    },

    // TAB
    tabItemClick: function tabItemClick(tab, tabArray) {
      if (tab.color === 'disable') {
        return;
      }
      var self = this;
      self.brandListShow = false;
      // 样式初始化
      if (self.tabItemLastClickPos === tab.id) {
        tab.color = 'normal';
        tab.up = 'normal';
        tab.down = 'normal';
      } else {
        tabArray[self.tabItemLastClickPos].color = 'normal';
        tabArray[self.tabItemLastClickPos].up = 'normal';
        tabArray[self.tabItemLastClickPos].down = 'normal';
        tabArray[self.tabItemLastClickPos].clickFirst = false;
      }
      if (self.tabItemLastClickPos === 0) {
        tabArray[self.tabItemLastClickPos].up = 'none';
        tabArray[self.tabItemLastClickPos].down = 'none';
      }
      if (self.tabItemLastClickPos === 4) {
        tabArray[self.tabItemLastClickPos].up = 'none';
      }
      self.tabItemLastClickPos = tab.id;
      tab.color = 'press';
      self.resultPageIndex = 1;
      // 事件处理
      if (tab.id === 0) {
        // 综合
        shopBase.userTrack({ key: 'search_click_sort', params: {} });
        tab.up = 'none';
        tab.down = 'none';
        self.sortValue = '';
        self.search();
      } else if (tab.id === 1) {
        // 销量
        shopBase.userTrack({ key: 'search_click_sale', params: {} });
        self.tabItemArrowChange(tab, 'salesVolume');
      } else if (tab.id === 2) {
        // 价格
        shopBase.userTrack({ key: 'search_click_price', params: {} });
        self.tabItemArrowChange(tab, 'price');
      } else if (tab.id === 3) {
        // 收益
        shopBase.userTrack({ key: 'search_click_earn', params: {} });
        self.tabItemArrowChange(tab, 'commission');
      } else if (tab.id === 4) {
        // 品牌
        shopBase.userTrack({ key: 'search_click_brand', params: {} });
        tab.up = 'none';
        tab.down = 'press';
        self.brandListShow = true;
      }
    },
    tabItemArrowChange: function tabItemArrowChange(tab, sort) {
      var self = this;
      if (tab.clickFirst) {
        // 下箭头变色
        tab.clickFirst = false;
        tab.down = 'press';
        sort = sort + ',desc';
      } else {
        // 上箭头变色
        tab.clickFirst = true;
        tab.up = 'press';
        sort = sort + ',asc';
      }
      self.sortValue = sort;
      self.search();
    },

    // 搜索结果列表
    resultItemClick: function resultItemClick(result) {
      shopBase.userTrack({ key: 'search_to_detail', params: {} });
      shopBase.openUrl('/shop/sku/' + result.id + '.html');
    },
    resultItemRightBottomBagClick: function resultItemRightBottomBagClick(result) {
      var self = this;
      if (self.isGiveaway) {
        return shopModal.toast({ message: '赠品暂不支持加入购物车！' });
      }
      var queryData = {
        itemId: result.id,
        quantity: 1,
        shopId: self.shopId
      };
      self.fetch({
        url: '/shop/cart/add',
        method: 'POST',
        data: queryData
      }, function (response) {
        if (response.isSuccess) {
          shopModal.toast({ message: '加入购物车成功' });
          shopBase.userTrack({ key: 'click_add_to_cart_pop', params: {} });
          // 样式变化
          result.isExistShopCart = true;
        } else {
          shopModal.toast({ message: response.msg });
        }
        return false;
      });
      return true;
    },
    resultItemRightBottomShelveClick: function resultItemRightBottomShelveClick(result) {
      var self = this;
      if (result.isSelected) {
        var data = {
          skuId: result.id
        };
        self.fetch({
          method: 'GET',
          url: '/api/shop/shopProduct/unselect',
          data: data
        }, function (response) {
          if (response.isSuccess) {
            result.isSelected = false;
            shopBase.userTrack({ key: 'search_remove_goods', params: {} });
          } else {
            shopModal.toast({ message: response.msg });
          }
        });
      } else {
        var _data = {
          skuId: result.id,
          type: 3
        };
        self.fetch({
          method: 'GET',
          url: '/api/shop/shopProduct/select',
          data: _data
        }, function (response) {
          if (response.isSuccess) {
            result.isSelected = true;
            shopBase.userTrack({ key: 'search_add_goods', params: {} });
          } else {
            shopModal.toast({ message: response.msg });
          }
        });
      }
    },
    resultItemRightBottomShareClick: function resultItemRightBottomShareClick(result) {
      shopBase.userTrack({ key: 'search_goods_share', params: {} });
      var data = {
        commission: String(result.commission), // 兼容iOS分享
        imgUrl: result.image,
        inventory: result.inventory,
        originalPrice: result.originalPrice,
        select: result.isSelected,
        shelvesCount: result.shelvesCount,
        shopPrice: result.price,
        skuId: result.id,
        brand: result.brandZhName,
        skuName: result.itemName
      };
      shopBase.shareDetail(data);
    },
    resultRefreshItems: function resultRefreshItems() {
      var self = this;
      self.resultRefreshStatus = 'show';
      self.resultPageIndex = 1;
      self.search();
    },
    resultLoadingItems: function resultLoadingItems() {
      var self = this;
      self.resultLoadingStatus = 'show';
      self.resultPageIndex += 1;
      self.search();
    },

    // 搜索建议列表
    sugItemClick: function sugItemClick(sug) {
      var self = this;
      self.navInputContent = sug.word;
      self.keywordValue = sug.word;
      self.resultPageIndex = 1;
      self.qValue = '';
      self.sortValue = '';
      self.search();
      self.onBlur();
    },

    // 品牌结果列表
    brandItemClick: function brandItemClick(brand, brandIndex) {
      var self = this;
      var qValue = '';
      if (brandIndex > 0) {
        self.brandZhNameValue = brand;
        qValue = 'brandZhName:' + self.brandZhNameValue;
        if (self.cateNameValue !== '') {
          qValue = qValue + ',cateName:' + self.cateNameValue;
        }
      } else {
        self.brandZhNameValue = '';
        if (self.cateNameValue !== '') {
          qValue = 'cateName:' + self.cateNameValue;
        }
      }
      self.qValue = qValue;
      self.resultPageIndex = 1;
      self.search();
      self.brandLastSelectedPos = brandIndex;
      self.brandListShow = false;
      self.onBlur();
    },
    brandListOutClick: function brandListOutClick() {
      // 注册点击事件，但不能执行
    },

    // 搜索历史列表
    historyDelClick: function historyDelClick() {
      var self = this;
      storage.removeItem('history', function () {
        self.historyList = [];
      });
    },
    historyItemClick: function historyItemClick(history) {
      shopBase.userTrack({ key: 'search_click_history_keyword', params: {} });
      var self = this;
      self.navInputContent = history;
      self.keywordValue = history;
      self.resultPageIndex = 1;
      self.qValue = '';
      self.sortValue = '';
      self.search();
      self.onBlur();
    }
  },
  mixins: [__WEBPACK_IMPORTED_MODULE_0_components_weex_mixins_weex_mixins__["height"], __WEBPACK_IMPORTED_MODULE_0_components_weex_mixins_weex_mixins__["base"], __WEBPACK_IMPORTED_MODULE_0_components_weex_mixins_weex_mixins__["request"]]
});

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = {
  "main-navigation-bar": {
    "width": 750,
    "flexDirection": "row",
    "alignItems": "flex-end",
    "paddingLeft": 20,
    "paddingRight": 20
  },
  "main-navigation-bar-border": {
    "borderBottomColor": "#F5F5F5",
    "borderBottomStyle": "solid",
    "borderBottomWidth": 1
  },
  "header-fixed": {
    "position": "fixed",
    "top": 0,
    "left": 0
  },
  "navigation-item": {
    "width": 88,
    "justifyContent": "center",
    "WebkitJustifyContent": "center",
    "flex": 0.5
  },
  "navigation-item-left-icon": {
    "width": 34,
    "height": 34
  },
  "titleView": {
    "alignItems": "center",
    "justifyContent": "center",
    "WebkitAlignItems": "center",
    "WebkitJustifyContent": "center"
  },
  "navigation-title-item": {
    "fontSize": 36,
    "textAlign": "center",
    "textOverflow": "ellipsis"
  }
}

/***/ }),
/* 14 */
/***/ (function(module, exports) {

module.exports = {
  "tag1-container-20": {
    "height": 32,
    "borderRadius": 16,
    "paddingLeft": 16,
    "paddingRight": 16,
    "borderStyle": "solid",
    "borderColor": "#f93450",
    "borderWidth": 1,
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag1-title-20": {
    "color": "#f93450",
    "fontSize": 20,
    "lineHeight": 20
  },
  "tag1-container-24": {
    "height": 36,
    "borderRadius": 18,
    "paddingLeft": 16,
    "paddingRight": 16,
    "borderStyle": "solid",
    "borderColor": "#f93450",
    "borderWidth": 1,
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag1-title-24": {
    "color": "#f93450",
    "fontSize": 24,
    "lineHeight": 24
  },
  "tag2-container-20": {
    "height": 28,
    "borderRadius": 14,
    "paddingLeft": 10,
    "paddingRight": 10,
    "backgroundColor": "#f93450",
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag2-container-20-disable": {
    "height": 28,
    "borderRadius": 14,
    "paddingLeft": 10,
    "paddingRight": 10,
    "backgroundColor": "#b3b3b3",
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag2-title-20": {
    "color": "#ffffff",
    "fontSize": 20,
    "lineHeight": 20
  },
  "tag2-container-24": {
    "height": 36,
    "borderRadius": 18,
    "paddingLeft": 16,
    "paddingRight": 16,
    "backgroundColor": "#f93450",
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag2-container-24-disable": {
    "height": 36,
    "borderRadius": 18,
    "paddingLeft": 16,
    "paddingRight": 16,
    "backgroundColor": "#b3b3b3",
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag2-title-24": {
    "color": "#ffffff",
    "fontSize": 24,
    "lineHeight": 24
  },
  "tag3-container-20": {
    "height": 44,
    "borderRadius": 22,
    "paddingLeft": 24,
    "paddingRight": 24,
    "backgroundColor": "#f8f8f8",
    "alignItems": "center",
    "flexDirection": "row"
  },
  "tag3-title-20": {
    "color": "#808080",
    "fontSize": 20,
    "lineHeight": 20
  }
}

/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = {
  "nav-left-web": {
    "justifyContent": "center",
    "alignItems": "center"
  },
  "nav-right-input-web": {
    "marginLeft": 20,
    "width": 552,
    "height": 64,
    "flexDirection": "row",
    "backgroundColor": "#ffffff",
    "borderBottomLeftRadius": 100,
    "borderTopLeftRadius": 100
  },
  "nav-right-input-icon-root-web": {
    "width": 50,
    "alignItems": "flex-end",
    "justifyContent": "center"
  },
  "nav-right-input-icon-web": {
    "width": 30,
    "height": 30
  },
  "nav-right-input-input-web": {
    "width": 502,
    "paddingLeft": 20,
    "paddingRight": 30,
    "fontSize": 28,
    "color": "#4d4d4d"
  },
  "nav-right-input-close-web": {
    "width": 64,
    "height": 64,
    "alignItems": "center",
    "justifyContent": "center",
    "marginLeft": -64
  },
  "nav-right-input-close-icon-web": {
    "width": 30,
    "height": 30
  },
  "nav-right-input-search-web": {
    "width": 118,
    "height": 64,
    "borderTopRightRadius": 100,
    "borderBottomRightRadius": 100,
    "backgroundColor": "#d90220",
    "fontSize": 28,
    "lineHeight": 28,
    "color": "#ffffff",
    "paddingTop": 18,
    "paddingLeft": 32
  },
  "nav-left": {
    "flexDirection": "row",
    "alignItems": "center"
  },
  "nav-left-back-root": {
    "paddingLeft": 13,
    "paddingRight": 32,
    "height": 64,
    "alignItems": "center",
    "justifyContent": "center"
  },
  "nav-left-back": {
    "width": 34,
    "height": 34
  },
  "nav-left-input": {
    "height": 64,
    "flexDirection": "row",
    "backgroundColor": "#ffffff",
    "borderRadius": 100
  },
  "nav-left-input-icon-root": {
    "width": 50,
    "alignItems": "flex-end",
    "justifyContent": "center"
  },
  "nav-left-input-icon": {
    "width": 30,
    "height": 30
  },
  "nav-left-input-input": {
    "paddingLeft": 20,
    "paddingRight": 30,
    "borderTopRightRadius": 100,
    "borderBottomRightRadius": 100,
    "fontSize": 28,
    "color": "#4d4d4d"
  },
  "nav-left-share-root": {
    "paddingLeft": 30,
    "paddingRight": 10,
    "height": 64,
    "justifyContent": "center"
  },
  "nav-left-share": {
    "width": 50,
    "height": 50
  },
  "nav-left-cancel": {
    "fontSize": 28,
    "lineHeight": 28,
    "color": "#ffffff",
    "paddingLeft": 40,
    "paddingRight": 20,
    "paddingTop": 18,
    "paddingBottom": 18
  },
  "tab": {
    "flexDirection": "row",
    "height": 80,
    "backgroundColor": "#ffffff"
  },
  "tab-item": {
    "flex": 1,
    "alignItems": "center",
    "justifyContent": "center"
  },
  "tab-item-content": {
    "flexDirection": "row",
    "alignItems": "center"
  },
  "tab-item-content-text": {
    "fontSize": 24
  },
  "tab-item-content-arrow": {
    "marginLeft": 10
  },
  "tab-item-content-arrow-up": {
    "width": 8,
    "height": 8
  },
  "tab-item-content-arrow-down": {
    "width": 8,
    "height": 8,
    "marginTop": 5
  },
  "tab-line": {
    "backgroundColor": "#e6e6e6",
    "height": 1
  },
  "result-null": {
    "alignItems": "center",
    "justifyContent": "center"
  },
  "result-null-image": {
    "width": 289,
    "height": 259
  },
  "result-null-text": {
    "fontSize": 28,
    "color": "#b3b3b3",
    "marginTop": 54
  },
  "result-list": {
    "backgroundColor": "#ffffff"
  },
  "result-item": {
    "height": 240
  },
  "result-item-left-image": {
    "width": 200,
    "height": 200,
    "margin": 20
  },
  "result-item-left-sold-out": {
    "width": 100,
    "height": 100,
    "marginTop": -170,
    "marginLeft": 70
  },
  "result-item-right": {
    "height": 240,
    "justifyContent": "space-between"
  },
  "result-item-right-title": {
    "width": 480,
    "marginTop": 20,
    "marginRight": 30
  },
  "result-item-right-title-flag": {
    "width": 102,
    "height": 24,
    "marginBottom": -30
  },
  "result-item-right-title-text": {
    "fontSize": 24,
    "lineHeight": 36,
    "color": "#1a1210",
    "lines": 2,
    "textOverflow": "ellipsis"
  },
  "result-item-right-bottom": {
    "width": 500,
    "flexDirection": "row",
    "alignItems": "flex-end",
    "justifyContent": "space-between"
  },
  "result-item-right-bottom-price-earn": {
    "marginBottom": 40
  },
  "result-item-right-bottom-price": {
    "flexDirection": "row",
    "alignItems": "flex-end"
  },
  "result-item-right-bottom-price-flag": {
    "fontSize": 20,
    "color": "#f93450",
    "fontWeight": "bold"
  },
  "result-item-right-bottom-price-text": {
    "fontSize": 32,
    "color": "#f93450",
    "marginBottom": -4,
    "fontWeight": "bold"
  },
  "result-item-right-bottom-original-price-text": {
    "fontSize": 20,
    "color": "#cccccc",
    "marginLeft": 10,
    "textDecoration": "line-through"
  },
  "result-item-right-bottom-earn-text": {
    "marginTop": 10
  },
  "result-item-right-bottom-button": {
    "flexDirection": "row",
    "alignItems": "flex-end"
  },
  "result-item-right-bottom-bag": {
    "width": 89,
    "height": 116,
    "alignItems": "center",
    "justifyContent": "center"
  },
  "result-item-right-bottom-bag-image": {
    "width": 29,
    "height": 36
  },
  "result-item-right-bottom-shelve": {
    "width": 92,
    "height": 112,
    "alignItems": "center",
    "justifyContent": "center"
  },
  "result-item-right-bottom-shelve-image": {
    "width": 32,
    "height": 32
  },
  "result-item-right-bottom-share": {
    "width": 92,
    "height": 112,
    "alignItems": "center",
    "justifyContent": "center"
  },
  "result-item-right-bottom-share-image": {
    "width": 32,
    "height": 32
  },
  "result-line": {
    "backgroundColor": "#e6e6e6",
    "height": 1,
    "position": "absolute",
    "bottom": 0,
    "right": 0,
    "left": 20
  },
  "result-refresh": {
    "width": 750,
    "height": 100,
    "backgroundColor": "rgba(0,0,0,0)",
    "alignItems": "center",
    "justifyContent": "center"
  },
  "result-loading": {
    "width": 750,
    "height": 100,
    "backgroundColor": "rgba(0,0,0,0)",
    "alignItems": "center",
    "justifyContent": "center"
  },
  "sug-list": {
    "position": "fixed",
    "width": 750,
    "backgroundColor": "#ffffff"
  },
  "sug-item": {
    "height": 90,
    "flexDirection": "row",
    "justifyContent": "space-between",
    "alignItems": "center"
  },
  "sug-item-word": {
    "fontSize": 24,
    "lineHeight": 24,
    "color": "#4b4b4b",
    "marginLeft": 20
  },
  "sug-item-amount": {
    "fontSize": 24,
    "lineHeight": 24,
    "color": "#cccccc",
    "marginRight": 20
  },
  "sug-line": {
    "width": 730,
    "height": 1,
    "marginLeft": 20,
    "backgroundColor": "#e6e6e6"
  },
  "brand-root": {
    "position": "fixed"
  },
  "brand-list": {
    "backgroundColor": "#ffffff",
    "height": 700,
    "width": 750
  },
  "brand-item-text-image": {
    "width": 750,
    "height": 90,
    "flexDirection": "row",
    "justifyContent": "space-between",
    "alignItems": "center"
  },
  "brand-item-text": {
    "flexDirection": "row",
    "alignItems": "center"
  },
  "brand-item-text-zh": {
    "fontSize": 24,
    "lineHeight": 24,
    "marginLeft": 20
  },
  "brand-item-text-en": {
    "fontSize": 24,
    "lineHeight": 24
  },
  "brand-item-image": {
    "width": 20,
    "height": 20,
    "marginRight": 30
  },
  "brand-line": {
    "width": 730,
    "height": 1,
    "marginLeft": 20,
    "backgroundColor": "#e6e6e6"
  },
  "brand-list-out": {
    "width": 750,
    "backgroundColor": "rgba(0,0,0,0.8)"
  },
  "history-root": {
    "position": "fixed",
    "backgroundColor": "#ffffff",
    "width": 750
  },
  "history-header": {
    "height": 129,
    "flexDirection": "row",
    "justifyContent": "space-between"
  },
  "history-header-text": {
    "fontSize": 28,
    "lineHeight": 28,
    "color": "#7e7e7e",
    "marginLeft": 20,
    "marginTop": 61
  },
  "history-header-icon-root": {
    "width": 87,
    "height": 129,
    "alignItems": "center"
  },
  "history-header-icon": {
    "width": 27,
    "height": 30,
    "marginTop": 60
  },
  "history-item-text": {
    "width": 750,
    "height": 90,
    "fontSize": 24,
    "lineHeight": 24,
    "paddingLeft": 20,
    "paddingTop": 33
  },
  "history-line": {
    "width": 730,
    "height": 1,
    "marginLeft": 20,
    "backgroundColor": "#e6e6e6"
  }
}

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    staticClass: ["main-navigation-bar"],
    class: [_vm.fixed ? 'header-fixed' : '', _vm.border ? 'main-navigation-bar-border' : ''],
    style: {
      backgroundColor: _vm.barBGColor,
      height: _vm.navigationBarHeight + 'px'
    }
  }, [_vm._t("left", [_c('div', {
    staticClass: ["navigation-item"],
    style: {
      height: _vm.navigationBarItemHeight + 'px'
    },
    on: {
      "click": _vm.navigationPopAction
    }
  }, [_c('image', {
    staticClass: ["navigation-item-left-icon"],
    attrs: {
      "src": _vm.navigationLeftImage,
      "resize": "contain"
    }
  })])]), _c('div', {
    staticClass: ["titleView"],
    style: {
      height: _vm.navigationBarItemHeight + 'px'
    }
  }, [_c('text', {
    staticClass: ["navigation-title-item"],
    style: {
      color: _vm.titleColor
    },
    attrs: {
      "lines": 1
    }
  }, [_vm._v(_vm._s(_vm.title))])]), _vm._t("right", [_c('div', {
    staticClass: ["navigation-item"],
    style: {
      height: _vm.navigationBarItemHeight + 'px'
    }
  })])], 2)
},staticRenderFns: []}
module.exports.render._withStripped = true

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', {
    class: [_vm.oClassNameContainer.containerClass]
  }, [_c('text', {
    class: [_vm.oClassNameContainer.titleClass]
  }, [_vm._t("default")], 2)])
},staticRenderFns: []}
module.exports.render._withStripped = true

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;
  return _c('div', [(_vm.isWeb) ? _c('spon-header', {
    attrs: {
      "barBGColor": "#f93450"
    }
  }, [_c('div', {
    staticClass: ["nav-left-web"],
    style: {
      height: _vm.getAbsHeight(88) + 'px'
    },
    slot: "left"
  }, [_c('div', {
    staticClass: ["nav-right-input-web"]
  }, [_c('div', {
    staticClass: ["nav-right-input-icon-root-web"]
  }, [_c('image', {
    staticClass: ["nav-right-input-icon-web"],
    attrs: {
      "src": _vm.navSearchImage,
      "resize": "contain"
    }
  })]), _c('input', {
    ref: "input",
    staticClass: ["nav-right-input-input-web"],
    attrs: {
      "type": "text",
      "returnKeyType": "search",
      "placeholder": "想买什么？搜搜看",
      "placeholderColor": "#cccccc",
      "value": (_vm.navInputContent)
    },
    on: {
      "focus": _vm.onFocus,
      "input": [function($event) {
        _vm.navInputContent = $event.target.attr.value
      }, _vm.onInput]
    }
  }), (_vm.navFocus && _vm.navInputContent.trim() !== '') ? _c('div', {
    staticClass: ["nav-right-input-close-web"],
    on: {
      "click": _vm.navClose
    }
  }, [_c('image', {
    staticClass: ["nav-right-input-close-icon-web"],
    attrs: {
      "src": _vm.navCloseImage
    }
  })]) : _vm._e(), _c('text', {
    staticClass: ["nav-right-input-search-web"],
    on: {
      "click": _vm.navSearch
    }
  }, [_vm._v("搜索")])])])]) : _c('spon-header', {
    attrs: {
      "barBGColor": "#f93450"
    }
  }, [_c('div', {
    staticClass: ["nav-left"],
    style: {
      height: _vm.getAbsHeight(88) + 'px'
    },
    slot: "left"
  }, [(!_vm.navFocus) ? _c('div', {
    staticClass: ["nav-left-back-root"],
    on: {
      "click": _vm.navBack
    }
  }, [_c('image', {
    staticClass: ["nav-left-back"],
    attrs: {
      "src": _vm.navBackImage,
      "resize": "contain"
    }
  })]) : _vm._e(), _c('div', {
    staticClass: ["nav-left-input"],
    style: {
      marginLeft: _vm.navInputMarginLeft + 'px'
    }
  }, [_c('div', {
    staticClass: ["nav-left-input-icon-root"]
  }, [_c('image', {
    staticClass: ["nav-left-input-icon"],
    attrs: {
      "src": _vm.navSearchImage,
      "resize": "contain"
    }
  })]), _c('input', {
    ref: "input",
    staticClass: ["nav-left-input-input"],
    style: {
      width: _vm.navInputWidth + 'px'
    },
    attrs: {
      "type": "text",
      "returnKeyType": "search",
      "placeholder": "想买什么？搜搜看",
      "placeholderColor": "#cccccc",
      "value": (_vm.navInputContent)
    },
    on: {
      "focus": _vm.onFocus,
      "blur": _vm.onBlur,
      "input": [function($event) {
        _vm.navInputContent = $event.target.attr.value
      }, _vm.onInput],
      "return": _vm.onReturn
    }
  })]), (!_vm.navFocus) ? _c('div', {
    staticClass: ["nav-left-share-root"],
    on: {
      "click": _vm.navShare
    }
  }, [_c('image', {
    staticClass: ["nav-left-share"],
    attrs: {
      "src": _vm.navShareImage,
      "resize": "contain"
    }
  })]) : _vm._e(), (_vm.navFocus) ? _c('text', {
    staticClass: ["nav-left-cancel"],
    on: {
      "click": _vm.navCancel
    }
  }, [_vm._v("取消")]) : _vm._e()])]), _c('div', {
    staticClass: ["tab"]
  }, _vm._l((_vm.tabArray), function(tab, tabIndex) {
    return _c('div', {
      key: tab.id,
      ref: "tabItem",
      refInFor: true,
      staticClass: ["tab-item"],
      on: {
        "click": function($event) {
          _vm.tabItemClick(tab, _vm.tabArray)
        }
      }
    }, [_c('div', {
      staticClass: ["tab-item-content"]
    }, [(tab.color === 'normal') ? _c('text', {
      staticClass: ["tab-item-content-text"],
      style: {
        color: '#1a1210'
      }
    }, [_vm._v(_vm._s(tab.name))]) : (tab.color === 'press') ? _c('text', {
      staticClass: ["tab-item-content-text"],
      style: {
        color: '#f93450'
      }
    }, [_vm._v(_vm._s(tab.name))]) : (tab.color === 'disable') ? _c('text', {
      staticClass: ["tab-item-content-text"],
      style: {
        color: '#cccccc'
      }
    }, [_vm._v(_vm._s(tab.name))]) : _vm._e(), _c('div', {
      staticClass: ["tab-item-content-arrow"]
    }, [(tab.up === 'normal') ? _c('image', {
      staticClass: ["tab-item-content-arrow-up"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/1c/1cbbf8f569634834b92e7ba2623a5afd.png"
      }
    }) : (tab.up === 'press') ? _c('image', {
      staticClass: ["tab-item-content-arrow-up"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/56/56dac1c8ac3a4ccaacf350d4a98bcea8.png"
      }
    }) : _vm._e(), (tab.down === 'normal') ? _c('image', {
      staticClass: ["tab-item-content-arrow-down"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/51/512faf8878954e9284423e6b448d0644.png"
      }
    }) : (tab.down === 'press') ? _c('image', {
      staticClass: ["tab-item-content-arrow-down"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/78/784b98a8e48b4126b6b59c8ce8a87ae9.png"
      }
    }) : (tab.down === 'disable') ? _c('image', {
      staticClass: ["tab-item-content-arrow-down"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/e9/e9d4a0617aa44cbb8261a19241303f8f.png"
      }
    }) : _vm._e()])])])
  })), _c('div', {
    staticClass: ["tab-line"]
  }), (_vm.resultRequestFirst && _vm.resultList.length === 0) ? _c('div', {
    staticClass: ["result-null"],
    style: {
      height: _vm.resultListHeight + 'px'
    }
  }, [_c('image', {
    staticClass: ["result-null-image"],
    attrs: {
      "src": _vm.resultNull,
      "resize": "contain"
    }
  }), _c('text', {
    staticClass: ["result-null-text"]
  }, [_vm._v("没有找到相关的商品哦~")])]) : _c('list', {
    staticClass: ["result-list"],
    style: {
      height: _vm.resultListHeight + 'px'
    },
    attrs: {
      "loadmoreoffset": "200"
    }
  }, [_c('refresh', {
    staticClass: ["result-refresh"],
    attrs: {
      "display": _vm.resultRefreshStatus
    },
    on: {
      "refresh": _vm.resultRefreshItems
    }
  }, [_c('loading-indicator', {
    staticStyle: {
      width: "50px",
      height: "50px",
      color: "#ccc"
    }
  })], 1), _vm._l((_vm.resultList), function(result, resultIndex) {
    return _c('cell', {
      key: result.id,
      staticClass: ["result-item"],
      appendAsTree: true,
      attrs: {
        "append": "tree"
      },
      on: {
        "click": function($event) {
          _vm.resultItemClick(result)
        }
      }
    }, [_c('div', {
      staticStyle: {
        flexDirection: "row"
      }
    }, [_c('div', [_c('image', {
      staticClass: ["result-item-left-image"],
      attrs: {
        "src": result.image,
        "resize": "contain"
      }
    }), (result.inventory < 1) ? _c('image', {
      staticClass: ["result-item-left-sold-out"],
      attrs: {
        "resize": "contain",
        "src": _vm.resultItemSoldOut
      }
    }) : _vm._e()]), _c('div', {
      staticClass: ["result-item-right"]
    }, [_c('div', {
      staticClass: ["result-item-right-title"]
    }, [(result.isSpecialSell) ? _c('yoga-tag', {
      staticClass: ["result-item-right-title-flag"],
      attrs: {
        "type": "tag2",
        "size": "20"
      }
    }, [_vm._v("冰点秒杀")]) : _vm._e(), _c('text', {
      staticClass: ["result-item-right-title-text"]
    }, [_vm._v(_vm._s(_vm._f("addSpace")(result.itemName, result.isSpecialSell)))])], 1), _c('div', {
      staticClass: ["result-item-right-bottom"]
    }, [_c('div', {
      staticClass: ["result-item-right-bottom-price-earn"]
    }, [_c('div', {
      staticClass: ["result-item-right-bottom-price"]
    }, [_c('text', {
      staticClass: ["result-item-right-bottom-price-flag"]
    }, [_vm._v("￥")]), _c('text', {
      staticClass: ["result-item-right-bottom-price-text"]
    }, [_vm._v(_vm._s(parseFloat(result.price).toFixed(2)))]), (_vm.shopId < 1) ? _c('text', {
      staticClass: ["result-item-right-bottom-original-price-text"]
    }, [_vm._v("￥" + _vm._s(parseFloat(result.originalPrice).toFixed(2)))]) : _vm._e()]), (_vm.shopId > 0) ? _c('yoga-tag', {
      staticClass: ["result-item-right-bottom-earn-text"],
      attrs: {
        "type": "tag1",
        "size": "20"
      }
    }, [_vm._v("赚￥" + _vm._s(parseFloat(result.commission).toFixed(2)))]) : _vm._e()], 1), _c('div', {
      staticClass: ["result-item-right-bottom-button"]
    }, [(_vm.shopId > 0) ? _c('div', {
      staticClass: ["result-item-right-bottom-shelve"],
      on: {
        "click": function($event) {
          _vm.resultItemRightBottomShelveClick(result)
        }
      }
    }, [(result.isSelected) ? _c('image', {
      staticClass: ["result-item-right-bottom-shelve-image"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/68/688781361161444b9e5c61c359a4719c.png"
      }
    }) : _c('image', {
      staticClass: ["result-item-right-bottom-shelve-image"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/2e/2e9ab463fc5647348d2c2449e64956b8.png"
      }
    })]) : _vm._e(), _c('div', {
      staticClass: ["result-item-right-bottom-bag"],
      on: {
        "click": function($event) {
          _vm.resultItemRightBottomBagClick(result)
        }
      }
    }, [(result.isExistShopCart) ? _c('image', {
      staticClass: ["result-item-right-bottom-bag-image"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/f6/f6f7ac114fa24e72b784cdb6e59b40ab.png"
      }
    }) : _c('image', {
      staticClass: ["result-item-right-bottom-bag-image"],
      attrs: {
        "resize": "contain",
        "src": "//cdn1.showjoy.com/images/a0/a0508e620fa94634be4071168175b833.png"
      }
    })]), (_vm.shopId > 0) ? _c('div', {
      staticClass: ["result-item-right-bottom-share"],
      attrs: {
        "resize": "contain"
      },
      on: {
        "click": function($event) {
          _vm.resultItemRightBottomShareClick(result)
        }
      }
    }, [_c('image', {
      staticClass: ["result-item-right-bottom-share-image"],
      attrs: {
        "resize": "contain",
        "src": _vm.resultItemRightBottomShareImage
      }
    })]) : _vm._e()])])])]), _c('div', {
      staticClass: ["result-line"]
    })])
  }), _c('loading', {
    staticClass: ["result-loading"],
    attrs: {
      "display": _vm.resultLoadingStatus
    },
    on: {
      "loading": _vm.resultLoadingItems
    }
  }, [_c('loading-indicator', {
    staticStyle: {
      width: "50px",
      height: "50px",
      color: "#ccc"
    }
  })], 1)], 2), (_vm.navFocus) ? _c('div', {
    staticClass: ["history-root"],
    style: {
      height: _vm.historyListHeight + 'px',
      top: _vm.FixedLayoutTop + 'px'
    }
  }, [_c('div', {
    staticClass: ["history-header"]
  }, [_c('text', {
    staticClass: ["history-header-text"]
  }, [_vm._v("搜索历史")]), _c('div', {
    staticClass: ["history-header-icon-root"],
    on: {
      "click": _vm.historyDelClick
    }
  }, [_c('image', {
    staticClass: ["history-header-icon"],
    attrs: {
      "src": _vm.historyDelIcon
    }
  })])]), _c('list', _vm._l((_vm.historyList), function(history, historyIndex) {
    return _c('cell', {
      key: historyIndex,
      appendAsTree: true,
      attrs: {
        "append": "tree"
      },
      on: {
        "click": function($event) {
          _vm.historyItemClick(history)
        }
      }
    }, [_c('text', {
      staticClass: ["history-item-text"]
    }, [_vm._v(_vm._s(history))]), _c('div', {
      staticClass: ["history-line"]
    })])
  }))]) : _vm._e(), (_vm.navFocus && _vm.sugList.length > 0) ? _c('list', {
    staticClass: ["sug-list"],
    style: {
      height: _vm.sugListHeight + 'px',
      top: _vm.FixedLayoutTop + 'px'
    }
  }, _vm._l((_vm.sugList), function(sug, sugIndex) {
    return _c('cell', {
      key: sugIndex,
      appendAsTree: true,
      attrs: {
        "append": "tree"
      },
      on: {
        "click": function($event) {
          _vm.sugItemClick(sug)
        }
      }
    }, [_c('div', {
      staticClass: ["sug-item"]
    }, [_c('text', {
      staticClass: ["sug-item-word"]
    }, [_vm._v(_vm._s(sug.word))]), _c('text', {
      staticClass: ["sug-item-amount"]
    }, [_vm._v("约" + _vm._s(sug.amount) + "件")])]), _c('div', {
      staticClass: ["sug-line"]
    })])
  })) : _vm._e(), (_vm.brandListShow) ? _c('div', {
    staticClass: ["brand-root"],
    style: {
      top: (_vm.FixedLayoutTop + _vm.tabHeight) + 'px'
    }
  }, [_c('list', {
    staticClass: ["brand-list"]
  }, _vm._l((_vm.brandList), function(brand, brandIndex) {
    return _c('cell', {
      key: brandIndex,
      appendAsTree: true,
      attrs: {
        "append": "tree"
      },
      on: {
        "click": function($event) {
          _vm.brandItemClick(brand, brandIndex)
        }
      }
    }, [_c('div', {
      staticClass: ["brand-item-text-image"]
    }, [_c('div', {
      staticClass: ["brand-item-text"]
    }, [(_vm.brandLastSelectedPos === brandIndex) ? _c('text', {
      staticClass: ["brand-item-text-zh"],
      staticStyle: {
        color: "#f93450"
      }
    }, [_vm._v(_vm._s(_vm._f("splitBrandName")(brand, true)))]) : _c('text', {
      staticClass: ["brand-item-text-zh"],
      staticStyle: {
        color: "#4b4b4b"
      }
    }, [_vm._v(_vm._s(_vm._f("splitBrandName")(brand, true)))]), (_vm.brandLastSelectedPos === brandIndex) ? _c('text', {
      staticClass: ["brand-item-text-en"],
      staticStyle: {
        color: "#f93450"
      }
    }, [_vm._v(_vm._s(_vm._f("splitBrandName")(brand, false)))]) : _c('text', {
      staticClass: ["brand-item-text-en"],
      staticStyle: {
        color: "#cccccc"
      }
    }, [_vm._v(_vm._s(_vm._f("splitBrandName")(brand, false)))])]), (_vm.brandLastSelectedPos === brandIndex) ? _c('image', {
      staticClass: ["brand-item-image"],
      attrs: {
        "src": _vm.brandItemSelectIcon
      }
    }) : _vm._e()]), _c('div', {
      staticClass: ["brand-line"]
    })])
  })), _c('div', {
    staticClass: ["brand-list-out"],
    style: {
      height: _vm.brandListOutHeight + 'px'
    },
    on: {
      "click": _vm.brandListOutClick
    }
  })]) : _vm._e()], 1)
},staticRenderFns: []}
module.exports.render._withStripped = true

/***/ })
/******/ ]);
//# sourceMappingURL=search-weex.weex.min.js.map
